name: Check Dependencies

on:
  # pull_request:
  #   branches: [ "main" ]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  check-dependencies:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Check for new versions
        id: check_versions
        shell: bash
        run: |
          set -e
          
          # Read local versions from .env file
          source .env
          
          echo "Current SOPS_VERSION: ${SOPS_VERSION}"
          echo "Current HELM_SECRETS_VERSION: ${HELM_SECRETS_VERSION}"
          
          # Get latest versions from GitHub
          LATEST_SOPS_VERSION=$(curl -s "https://api.github.com/repos/getsops/sops/releases/latest" | grep -Po '"tag_name": "\K.*?(?=")')
          LATEST_HELM_SECRETS_VERSION=$(curl -s "https://api.github.com/repos/jkroepke/helm-secrets/releases/latest" | grep -Po '"tag_name": "\K.*?(?=")')
          
          echo "Latest SOPS_VERSION: ${LATEST_SOPS_VERSION}"
          echo "Latest HELM_SECRETS_VERSION: ${LATEST_HELM_SECRETS_VERSION}"
          
          # Compare versions and set outputs
          if [ "${SOPS_VERSION}" != "${LATEST_SOPS_VERSION}" ] || [ "${HELM_SECRETS_VERSION}" != "${LATEST_HELM_SECRETS_VERSION}" ]; then
            echo "updates_available=true" >> $GITHUB_OUTPUT
            echo "new_sops_version=${LATEST_SOPS_VERSION}" >> $GITHUB_OUTPUT
            echo "new_helm_secrets_version=${LATEST_HELM_SECRETS_VERSION}" >> $GITHUB_OUTPUT
            echo "Update needed!"
          else
            echo "updates_available=false" >> $GITHUB_OUTPUT
            echo "All dependencies are up-to-date."
          fi

      - name: Update .env file
        if: steps.check_versions.outputs.updates_available == 'true'
        run: |
          sed -i "s|SOPS_VERSION=.*|SOPS_VERSION=${{ steps.check_versions.outputs.new_sops_version }}|" .env
          sed -i "s|HELM_SECRETS_VERSION=.*|HELM_SECRETS_VERSION=${{ steps.check_versions.outputs.new_helm_secrets_version }}|" .env

      - name: Create Pull Request
        if: steps.check_versions.outputs.updates_available == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GH_PAT }}
          commit-message: "chore(deps): update dependencies"
          title: "chore(deps): update dependencies"
          body: |
            Update versions:
            - SOPS: `${{ steps.check_versions.outputs.new_sops_version }}`
            - Helm Secrets: `${{ steps.check_versions.outputs.new_helm_secrets_version }}`
          branch: "chore/update-dependencies"
          delete-branch: true
          base: main
          signoff: true